const code=`<pre class="prettyprint linenums prettyprinted" data-anchor-id="edkq" style=""><ol class="linenums"><li class="L0"><code><span class="kwd">import</span><span class="pln"> </span><span class="typ">React</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'react'</span><span class="pun">;</span></code></li><li class="L1"><code><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">Tag</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Input</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Tooltip</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Icon</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'quant-ui'</span><span class="pun">;</span></code></li><li class="L2"><code></code></li><li class="L3"><code></code></li><li class="L4"><code><span class="kwd">class</span><span class="pln"> </span><span class="typ">Detail</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code></code></li><li class="L6"><code><span class="pln">    state </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L7"><code><span class="pln">        tags</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="str">'Unremovable'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'tag2'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'tag3'</span><span class="pun">],</span></code></li><li class="L8"><code><span class="pln">        inputVisible</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">,</span></code></li><li class="L9"><code><span class="pln">        inputValue</span><span class="pun">:</span><span class="pln"> </span><span class="str">''</span><span class="pun">,</span></code></li><li class="L0"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L1"><code></code></li><li class="L2"><code><span class="pln">    handleClose </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">removedTag</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L3"><code><span class="pln">        </span><span class="kwd">const</span><span class="pln"> tags </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">tags</span><span class="pun">.</span><span class="pln">filter</span><span class="pun">(</span><span class="pln">tag </span><span class="pun">=&gt;</span><span class="pln"> tag </span><span class="pun">!==</span><span class="pln"> removedTag</span><span class="pun">);</span></code></li><li class="L4"><code><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">setState</span><span class="pun">({</span><span class="pln"> tags </span><span class="pun">});</span></code></li><li class="L5"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L6"><code></code></li><li class="L7"><code><span class="pln">    showInput </span><span class="pun">=</span><span class="pln"> </span><span class="pun">()</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L8"><code><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">setState</span><span class="pun">({</span><span class="pln"> inputVisible</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"> </span><span class="pun">},</span><span class="pln"> </span><span class="pun">()</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">input</span><span class="pun">.</span><span class="pln">focus</span><span class="pun">());</span></code></li><li class="L9"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L0"><code></code></li><li class="L1"><code><span class="pln">    handleInputChange </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L2"><code><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">setState</span><span class="pun">({</span><span class="pln"> inputValue</span><span class="pun">:</span><span class="pln"> e</span><span class="pun">.</span><span class="pln">target</span><span class="pun">.</span><span class="pln">value </span><span class="pun">})</span></code></li><li class="L3"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L4"><code></code></li><li class="L5"><code><span class="pln">    handleInputConfirm </span><span class="pun">=</span><span class="pln"> </span><span class="pun">()</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L6"><code><span class="pln">        </span><span class="kwd">const</span><span class="pln"> state </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">;</span></code></li><li class="L7"><code><span class="pln">        </span><span class="kwd">const</span><span class="pln"> inputValue </span><span class="pun">=</span><span class="pln"> state</span><span class="pun">.</span><span class="pln">inputValue</span><span class="pun">;</span></code></li><li class="L8"><code><span class="pln">        </span><span class="kwd">let</span><span class="pln"> tags </span><span class="pun">=</span><span class="pln"> state</span><span class="pun">.</span><span class="pln">tags</span><span class="pun">;</span></code></li><li class="L9"><code><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">inputValue </span><span class="pun">&amp;&amp;</span><span class="pln"> tags</span><span class="pun">.</span><span class="pln">indexOf</span><span class="pun">(</span><span class="pln">inputValue</span><span class="pun">)</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L0"><code><span class="pln">            tags </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[...</span><span class="pln">tags</span><span class="pun">,</span><span class="pln"> inputValue</span><span class="pun">];</span></code></li><li class="L1"><code><span class="pln">        </span><span class="pun">}</span></code></li><li class="L2"><code><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">setState</span><span class="pun">({</span></code></li><li class="L3"><code><span class="pln">            tags</span><span class="pun">:</span><span class="pln"> tags</span><span class="pun">,</span></code></li><li class="L4"><code><span class="pln">            inputVisible</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">,</span></code></li><li class="L5"><code><span class="pln">            inputValue</span><span class="pun">:</span><span class="pln"> </span><span class="str">''</span></code></li><li class="L6"><code><span class="pln">        </span><span class="pun">})</span></code></li><li class="L7"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L8"><code></code></li><li class="L9"><code><span class="pln">    saveInputRef </span><span class="pun">=</span><span class="pln"> input </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">input </span><span class="pun">=</span><span class="pln"> input</span></code></li><li class="L0"><code></code></li><li class="L1"><code><span class="pln">    render</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L2"><code><span class="pln">        </span><span class="kwd">const</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> tags</span><span class="pun">,</span><span class="pln"> inputVisible</span><span class="pun">,</span><span class="pln"> inputValue </span><span class="pun">}</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">;</span></code></li><li class="L3"><code></code></li><li class="L4"><code><span class="pln">        </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">(</span></code></li><li class="L5"><code><span class="pln">            </span><span class="str">&lt;div&gt;</span></code></li><li class="L6"><code><span class="pln">                </span><span class="pun">{</span><span class="pln">tags</span><span class="pun">.</span><span class="pln">map</span><span class="pun">((</span><span class="pln">tag</span><span class="pun">,</span><span class="pln"> index</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L7"><code><span class="pln">                    </span><span class="kwd">const</span><span class="pln"> isLongTag </span><span class="pun">=</span><span class="pln"> tag</span><span class="pun">.</span><span class="pln">length </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">20</span><span class="pun">;</span></code></li><li class="L8"><code><span class="pln">                    </span><span class="kwd">const</span><span class="pln"> tagElem </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span></code></li><li class="L9"><code><span class="pln">                        </span><span class="pun">&lt;</span><span class="typ">Tag</span><span class="pln"> key</span><span class="pun">={</span><span class="pln">tag</span><span class="pun">}</span><span class="pln"> closable</span><span class="pun">={</span><span class="pln">index </span><span class="pun">!==</span><span class="pln"> </span><span class="lit">0</span><span class="pun">}</span><span class="pln"> afterClose</span><span class="pun">={()</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">handleClose</span><span class="pun">(</span><span class="pln">tag</span><span class="pun">)}&gt;</span></code></li><li class="L0"><code><span class="pln">                            </span><span class="pun">{</span><span class="pln">isLongTag </span><span class="pun">?</span><span class="pln"> </span><span class="str">\`$\{tag.slice(0, 20)}...\`</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> tag</span><span class="pun">}</span></code></li><li class="L1"><code><span class="pln">                        </span><span class="pun">&lt;/</span><span class="typ">Tag</span><span class="pun">&gt;</span></code></li><li class="L2"><code><span class="pln">                    </span><span class="pun">);</span></code></li><li class="L3"><code><span class="pln">                    </span><span class="kwd">return</span><span class="pln"> isLongTag </span><span class="pun">?</span><span class="pln"> </span><span class="pun">&lt;</span><span class="typ">Tooltip</span><span class="pln"> title</span><span class="pun">={</span><span class="pln">tag</span><span class="pun">}</span><span class="pln"> key</span><span class="pun">={</span><span class="pln">tag</span><span class="pun">}&gt;{</span><span class="pln">tagElem</span><span class="pun">}&lt;/</span><span class="typ">Tooltip</span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> tagElem</span><span class="pun">;</span></code></li><li class="L4"><code><span class="pln">                </span><span class="pun">})}</span></code></li><li class="L5"><code><span class="pln">                </span><span class="pun">{</span><span class="pln">inputVisible </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="pun">(</span></code></li><li class="L6"><code><span class="pln">                    </span><span class="pun">&lt;</span><span class="typ">Input</span></code></li><li class="L7"><code><span class="pln">                        </span><span class="kwd">ref</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">saveInputRef</span><span class="pun">}</span></code></li><li class="L8"><code><span class="pln">                        type</span><span class="pun">=</span><span class="str">"text"</span></code></li><li class="L9"><code><span class="pln">                        size</span><span class="pun">=</span><span class="str">"small"</span></code></li><li class="L0"><code><span class="pln">                        style</span><span class="pun">={{</span><span class="pln"> width</span><span class="pun">:</span><span class="pln"> </span><span class="lit">78</span><span class="pln"> </span><span class="pun">}}</span></code></li><li class="L1"><code><span class="pln">                        value</span><span class="pun">={</span><span class="pln">inputValue</span><span class="pun">}</span></code></li><li class="L2"><code><span class="pln">                        onChange</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">handleInputChange</span><span class="pun">}</span></code></li><li class="L3"><code><span class="pln">                        onBlur</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">handleInputConfirm</span><span class="pun">}</span></code></li><li class="L4"><code><span class="pln">                        onPressEnter</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">handleInputConfirm</span><span class="pun">}</span></code></li><li class="L5"><code><span class="pln">                    </span><span class="pun">/&gt;</span></code></li><li class="L6"><code><span class="pln">                </span><span class="pun">)}</span></code></li><li class="L7"><code><span class="pln">                </span><span class="pun">{!</span><span class="pln">inputVisible </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="pun">(</span></code></li><li class="L8"><code><span class="pln">                    </span><span class="pun">&lt;</span><span class="typ">Tag</span></code></li><li class="L9"><code><span class="pln">                        onClick</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">showInput</span><span class="pun">}</span></code></li><li class="L0"><code><span class="pln">                        style</span><span class="pun">={{</span><span class="pln"> background</span><span class="pun">:</span><span class="pln"> </span><span class="str">'#fff'</span><span class="pun">,</span><span class="pln"> borderStyle</span><span class="pun">:</span><span class="pln"> </span><span class="str">'dashed'</span><span class="pln"> </span><span class="pun">}}</span></code></li><li class="L1"><code><span class="pln">                    </span><span class="pun">&gt;</span></code></li><li class="L2"><code><span class="pln">                        </span><span class="pun">&lt;</span><span class="typ">Icon</span><span class="pln"> type</span><span class="pun">=</span><span class="str">"plus"</span><span class="pln"> </span><span class="pun">/&gt;</span><span class="pln"> </span><span class="typ">New</span><span class="pln"> </span><span class="typ">Tag</span></code></li><li class="L3"><code><span class="pln">                    </span><span class="pun">&lt;/</span><span class="typ">Tag</span><span class="pun">&gt;</span></code></li><li class="L4"><code><span class="pln">                </span><span class="pun">)}</span></code></li><li class="L5"><code><span class="pln">            </span><span class="pun">&lt;/</span><span class="pln">div</span><span class="pun">&gt;</span></code></li><li class="L6"><code><span class="pln">        </span><span class="pun">)</span></code></li><li class="L7"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L8"><code><span class="pun">}</span></code></li><li class="L9"><code></code></li><li class="L0"><code><span class="kwd">export</span><span class="pln"> </span><span class="kwd">default</span><span class="pln"> </span><span class="typ">Detail</span><span class="pun">;</span></code></li><li class="L1"><code></code></li><li class="L2"><code></code></li><li class="L3"><code></code></li><li class="L4"><code></code></li></ol></pre>`;

export default{
    code,
}