const code = `<pre class="prettyprint linenums prettyprinted" data-anchor-id="bzau"><ol class="linenums"><li class="L0"><code><span class="kwd">import</span><span class="pln"> </span><span class="typ">React</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'react'</span><span class="pun">;</span></code></li><li class="L1"><code><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">Input</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Tooltip</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'quant-ui'</span><span class="pun">;</span></code></li><li class="L2"><code><span class="kwd">import</span><span class="pln"> </span><span class="str">'./style.less'</span><span class="pun">;</span></code></li><li class="L3"><code><span class="kwd">function</span><span class="pln"> formatNumber</span><span class="pun">(</span><span class="pln">value</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L4"><code><span class="pln">    value </span><span class="pun">+=</span><span class="pln"> </span><span class="str">''</span><span class="pun">;</span></code></li><li class="L5"><code><span class="pln">    </span><span class="kwd">const</span><span class="pln"> list </span><span class="pun">=</span><span class="pln"> value</span><span class="pun">.</span><span class="pln">split</span><span class="pun">(</span><span class="str">'.'</span><span class="pun">);</span></code></li><li class="L6"><code><span class="pln">    </span><span class="kwd">const</span><span class="pln"> prefix </span><span class="pun">=</span><span class="pln"> list</span><span class="pun">[</span><span class="lit">0</span><span class="pun">].</span><span class="pln">charAt</span><span class="pun">(</span><span class="lit">0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">===</span><span class="pln"> </span><span class="str">'-'</span><span class="pln"> </span><span class="pun">?</span><span class="pln"> </span><span class="str">'-'</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">''</span><span class="pun">;</span></code></li><li class="L7"><code><span class="pln">    </span><span class="kwd">let</span><span class="pln"> num </span><span class="pun">=</span><span class="pln"> prefix </span><span class="pun">?</span><span class="pln"> list</span><span class="pun">[</span><span class="lit">0</span><span class="pun">].</span><span class="pln">slice</span><span class="pun">(</span><span class="lit">1</span><span class="pun">)</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> list</span><span class="pun">[</span><span class="lit">0</span><span class="pun">];</span></code></li><li class="L8"><code><span class="pln">    </span><span class="kwd">let</span><span class="pln"> result </span><span class="pun">=</span><span class="pln"> </span><span class="str">''</span><span class="pun">;</span></code></li><li class="L9"><code><span class="pln">    </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="pln">num</span><span class="pun">.</span><span class="pln">length </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">3</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L0"><code><span class="pln">        result </span><span class="pun">=</span><span class="pln"> </span><span class="str">','</span><span class="pun">+</span><span class="pln">num</span><span class="pun">.</span><span class="pln">slice</span><span class="pun">(-</span><span class="lit">3</span><span class="pun">)+</span><span class="pln">result</span><span class="pun">;</span></code></li><li class="L1"><code><span class="pln">        num </span><span class="pun">=</span><span class="pln"> num</span><span class="pun">.</span><span class="pln">slice</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> num</span><span class="pun">.</span><span class="pln">length </span><span class="pun">-</span><span class="pln"> </span><span class="lit">3</span><span class="pun">);</span></code></li><li class="L2"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L3"><code><span class="pln">    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">num</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L4"><code><span class="pln">        result </span><span class="pun">=</span><span class="pln"> num </span><span class="pun">+</span><span class="pln"> result</span><span class="pun">;</span></code></li><li class="L5"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L6"><code><span class="pln">    </span><span class="kwd">return</span><span class="pln"> </span><span class="str">''</span><span class="pun">+</span><span class="pln">prefix</span><span class="pun">+</span><span class="pln">result</span><span class="pun">+(</span><span class="pln">list</span><span class="pun">[</span><span class="lit">1</span><span class="pun">]</span><span class="pln"> </span><span class="pun">?</span><span class="pln"> </span><span class="str">'.'</span><span class="pun">+</span><span class="pln">list</span><span class="pun">[</span><span class="lit">1</span><span class="pun">]</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">''</span><span class="pun">);</span></code></li><li class="L7"><code><span class="pun">}</span></code></li><li class="L8"><code></code></li><li class="L9"><code><span class="kwd">class</span><span class="pln"> </span><span class="typ">NumericInput</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">React</span><span class="pun">.</span><span class="typ">Component</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L0"><code><span class="pln">    onChange </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L1"><code><span class="pln">        </span><span class="kwd">const</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> value </span><span class="pun">}</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> e</span><span class="pun">.</span><span class="pln">target</span><span class="pun">;</span></code></li><li class="L2"><code><span class="pln">        </span><span class="kwd">const</span><span class="pln"> reg </span><span class="pun">=</span><span class="pln"> </span><span class="str">/^-?(0|[1-9][0-9]*)(\.[0-9]*)?$/</span><span class="pun">;</span></code></li><li class="L3"><code><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">((!</span><span class="pln">isNaN</span><span class="pun">(</span><span class="pln">value</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> reg</span><span class="pun">.</span><span class="pln">test</span><span class="pun">(</span><span class="pln">value</span><span class="pun">))</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> value </span><span class="pun">===</span><span class="pln"> </span><span class="str">''</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> value </span><span class="pun">===</span><span class="pln"> </span><span class="str">'-'</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L4"><code><span class="pln">            </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">props</span><span class="pun">.</span><span class="pln">onChange</span><span class="pun">(</span><span class="pln">value</span><span class="pun">);</span></code></li><li class="L5"><code><span class="pln">        </span><span class="pun">}</span></code></li><li class="L6"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L7"><code></code></li><li class="L8"><code><span class="pln">    </span><span class="com">// '.' at the end or only '-' in the input box.</span></code></li><li class="L9"><code><span class="pln">    onBlur </span><span class="pun">=</span><span class="pln"> </span><span class="pun">()</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L0"><code><span class="pln">        </span><span class="kwd">const</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> value</span><span class="pun">,</span><span class="pln"> onBlur</span><span class="pun">,</span><span class="pln"> onChange </span><span class="pun">}</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">props</span><span class="pun">;</span></code></li><li class="L1"><code><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">value</span><span class="pun">.</span><span class="pln">charAt</span><span class="pun">(</span><span class="pln">value</span><span class="pun">.</span><span class="pln">length </span><span class="pun">-</span><span class="pln"> </span><span class="lit">1</span><span class="pun">)</span><span class="pln"> </span><span class="pun">===</span><span class="pln"> </span><span class="str">'.'</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> value </span><span class="pun">===</span><span class="pln"> </span><span class="str">'-'</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L2"><code><span class="pln">            onChange</span><span class="pun">({</span><span class="pln"> value</span><span class="pun">:</span><span class="pln"> value</span><span class="pun">.</span><span class="pln">slice</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pun">)</span><span class="pln"> </span><span class="pun">});</span></code></li><li class="L3"><code><span class="pln">        </span><span class="pun">}</span></code></li><li class="L4"><code><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">onBlur</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code><span class="pln">            onBlur</span><span class="pun">();</span></code></li><li class="L6"><code><span class="pln">        </span><span class="pun">}</span></code></li><li class="L7"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L8"><code></code></li><li class="L9"><code><span class="pln">    render</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L0"><code><span class="pln">        </span><span class="kwd">const</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> value </span><span class="pun">}</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">props</span><span class="pun">;</span></code></li><li class="L1"><code><span class="pln">        </span><span class="kwd">const</span><span class="pln"> title </span><span class="pun">=</span><span class="pln"> value </span><span class="pun">?</span><span class="pln"> </span><span class="pun">(</span></code></li><li class="L2"><code><span class="pln">            </span><span class="pun">&lt;</span><span class="pln">span className</span><span class="pun">=</span><span class="str">"numeric-input-title"</span><span class="pun">&gt;</span></code></li><li class="L3"><code><span class="pln">                </span><span class="pun">{</span><span class="pln">value </span><span class="pun">!==</span><span class="pln"> </span><span class="str">'-'</span><span class="pln"> </span><span class="pun">?</span><span class="pln"> formatNumber</span><span class="pun">(</span><span class="pln">value</span><span class="pun">)</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">'-'</span><span class="pun">}</span></code></li><li class="L4"><code><span class="pln">            </span><span class="pun">&lt;/</span><span class="pln">span</span><span class="pun">&gt;</span></code></li><li class="L5"><code><span class="pln">        </span><span class="pun">)</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">'Input a number'</span><span class="pun">;</span></code></li><li class="L6"><code><span class="pln">        </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">(</span></code></li><li class="L7"><code><span class="pln">            </span><span class="pun">&lt;</span><span class="typ">Tooltip</span></code></li><li class="L8"><code><span class="pln">                trigger</span><span class="pun">={[</span><span class="str">'focus'</span><span class="pun">]}</span></code></li><li class="L9"><code><span class="pln">                title</span><span class="pun">={</span><span class="pln">title</span><span class="pun">}</span></code></li><li class="L0"><code><span class="pln">                placement</span><span class="pun">=</span><span class="str">"topLeft"</span></code></li><li class="L1"><code><span class="pln">                overlayClassName</span><span class="pun">=</span><span class="str">"numeric-input"</span></code></li><li class="L2"><code><span class="pln">            </span><span class="pun">&gt;</span></code></li><li class="L3"><code><span class="pln">                </span><span class="pun">&lt;</span><span class="typ">Input</span></code></li><li class="L4"><code><span class="pln">                    </span><span class="pun">{...</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">props</span><span class="pun">}</span></code></li><li class="L5"><code><span class="pln">                    onChange</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">onChange</span><span class="pun">}</span></code></li><li class="L6"><code><span class="pln">                    onBlur</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">onBlur</span><span class="pun">}</span></code></li><li class="L7"><code><span class="pln">                    placeholder</span><span class="pun">=</span><span class="str">"Input a number"</span></code></li><li class="L8"><code><span class="pln">                    maxLength</span><span class="pun">=</span><span class="str">"25"</span></code></li><li class="L9"><code><span class="pln">                </span><span class="pun">/&gt;</span></code></li><li class="L0"><code><span class="pln">            </span><span class="pun">&lt;/</span><span class="typ">Tooltip</span><span class="pun">&gt;</span></code></li><li class="L1"><code><span class="pln">      </span><span class="pun">);</span></code></li><li class="L2"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L3"><code><span class="pln">  </span><span class="pun">}</span></code></li><li class="L4"><code></code></li><li class="L5"><code><span class="kwd">class</span><span class="pln"> </span><span class="typ">Detail</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L6"><code><span class="pln">    constructor</span><span class="pun">(</span><span class="pln">props</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L7"><code><span class="pln">        </span><span class="kwd">super</span><span class="pun">(</span><span class="pln">props</span><span class="pun">);</span></code></li><li class="L8"><code><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> value</span><span class="pun">:</span><span class="pln"> </span><span class="str">''</span><span class="pln"> </span><span class="pun">};</span></code></li><li class="L9"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L0"><code></code></li><li class="L1"><code><span class="pln">    onChange </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">value</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L2"><code><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">setState</span><span class="pun">({</span><span class="pln"> value </span><span class="pun">});</span></code></li><li class="L3"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L4"><code><span class="pln">    render</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code><span class="pln">        </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">&lt;</span><span class="typ">NumericInput</span><span class="pln"> style</span><span class="pun">={{</span><span class="pln"> width</span><span class="pun">:</span><span class="pln"> </span><span class="lit">120</span><span class="pln"> </span><span class="pun">}}</span><span class="pln"> value</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">value</span><span class="pun">}</span><span class="pln"> onChange</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">onChange</span><span class="pun">}</span><span class="pln"> </span><span class="pun">/&gt;;</span></code></li><li class="L6"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L7"><code><span class="pun">}</span></code></li><li class="L8"><code><span class="kwd">export</span><span class="pln"> </span><span class="kwd">default</span><span class="pln"> </span><span class="typ">Detail</span><span class="pun">;</span></code></li><li class="L9"><code></code></li><li class="L0"><code></code></li><li class="L1"><code><span class="pun">.</span><span class="pln">numeric</span><span class="pun">-</span><span class="pln">input </span><span class="pun">.</span><span class="pln">ant</span><span class="pun">-</span><span class="pln">tooltip</span><span class="pun">-</span><span class="pln">inner </span><span class="pun">{</span></code></li><li class="L2"><code><span class="pln">    min</span><span class="pun">-</span><span class="pln">width</span><span class="pun">:</span><span class="pln"> </span><span class="lit">32px</span><span class="pun">;</span></code></li><li class="L3"><code><span class="pln">    min</span><span class="pun">-</span><span class="pln">height</span><span class="pun">:</span><span class="pln"> </span><span class="lit">37px</span><span class="pun">;</span></code></li><li class="L4"><code><span class="pun">}</span></code></li><li class="L5"><code></code></li><li class="L6"><code><span class="pun">.</span><span class="pln">numeric</span><span class="pun">-</span><span class="pln">input </span><span class="pun">.</span><span class="pln">numeric</span><span class="pun">-</span><span class="pln">input</span><span class="pun">-</span><span class="pln">title </span><span class="pun">{</span></code></li><li class="L7"><code><span class="pln">    font</span><span class="pun">-</span><span class="pln">size</span><span class="pun">:</span><span class="pln"> </span><span class="lit">14px</span><span class="pun">;</span></code></li><li class="L8"><code><span class="pun">}</span></code></li></ol></pre>`;
export default {
	code,
}