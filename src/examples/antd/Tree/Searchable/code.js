const code=`<pre class="prettyprint linenums prettyprinted" data-anchor-id="ylef" style=""><ol class="linenums"><li class="L0"><code><span class="kwd">import</span><span class="pln"> </span><span class="typ">React</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'react'</span><span class="pun">;</span></code></li><li class="L1"><code><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">Tree</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Input</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'quant-ui'</span><span class="pun">;</span></code></li><li class="L2"><code></code></li><li class="L3"><code></code></li><li class="L4"><code><span class="kwd">const</span><span class="pln"> </span><span class="typ">TreeNode</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Tree</span><span class="pun">.</span><span class="typ">TreeNode</span><span class="pun">;</span></code></li><li class="L5"><code><span class="kwd">const</span><span class="pln"> </span><span class="typ">Search</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Input</span><span class="pun">.</span><span class="typ">Search</span><span class="pun">;</span></code></li><li class="L6"><code></code></li><li class="L7"><code><span class="kwd">const</span><span class="pln"> x </span><span class="pun">=</span><span class="pln"> </span><span class="lit">3</span><span class="pun">;</span></code></li><li class="L8"><code><span class="kwd">const</span><span class="pln"> y </span><span class="pun">=</span><span class="pln"> </span><span class="lit">2</span><span class="pun">;</span></code></li><li class="L9"><code><span class="kwd">const</span><span class="pln"> z </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span></code></li><li class="L0"><code><span class="kwd">const</span><span class="pln"> gData </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[];</span></code></li><li class="L1"><code></code></li><li class="L2"><code><span class="kwd">const</span><span class="pln"> generateData </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">_level</span><span class="pun">,</span><span class="pln"> _preKey</span><span class="pun">,</span><span class="pln"> _tns</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L3"><code><span class="pln">    </span><span class="kwd">const</span><span class="pln"> preKey </span><span class="pun">=</span><span class="pln"> _preKey </span><span class="pun">||</span><span class="pln"> </span><span class="str">'0'</span><span class="pun">;</span></code></li><li class="L4"><code><span class="pln">    </span><span class="kwd">const</span><span class="pln"> tns </span><span class="pun">=</span><span class="pln"> _tns </span><span class="pun">||</span><span class="pln"> gData</span><span class="pun">;</span></code></li><li class="L5"><code></code></li><li class="L6"><code><span class="pln">    </span><span class="kwd">const</span><span class="pln"> children </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[];</span></code></li><li class="L7"><code><span class="pln">    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">let</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> x</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L8"><code><span class="pln">        </span><span class="kwd">const</span><span class="pln"> key </span><span class="pun">=</span><span class="pln"> </span><span class="str">\`$\{preKey}-$\{i}\`</span><span class="pun">;</span></code></li><li class="L9"><code><span class="pln">        tns</span><span class="pun">.</span><span class="pln">push</span><span class="pun">({</span><span class="pln"> title</span><span class="pun">:</span><span class="pln"> key</span><span class="pun">,</span><span class="pln"> key </span><span class="pun">});</span></code></li><li class="L0"><code><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">i </span><span class="pun">&lt;</span><span class="pln"> y</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L1"><code><span class="pln">            children</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="pln">key</span><span class="pun">);</span></code></li><li class="L2"><code><span class="pln">        </span><span class="pun">}</span></code></li><li class="L3"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L4"><code><span class="pln">    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">_level </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code><span class="pln">        </span><span class="kwd">return</span><span class="pln"> tns</span><span class="pun">;</span></code></li><li class="L6"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L7"><code><span class="pln">    </span><span class="kwd">const</span><span class="pln"> level </span><span class="pun">=</span><span class="pln"> _level </span><span class="pun">-</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span></code></li><li class="L8"><code><span class="pln">    children</span><span class="pun">.</span><span class="pln">forEach</span><span class="pun">((</span><span class="pln">key</span><span class="pun">,</span><span class="pln"> index</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L9"><code><span class="pln">        tns</span><span class="pun">[</span><span class="pln">index</span><span class="pun">].</span><span class="pln">children </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[];</span></code></li><li class="L0"><code><span class="pln">        </span><span class="kwd">return</span><span class="pln"> generateData</span><span class="pun">(</span><span class="pln">level</span><span class="pun">,</span><span class="pln"> key</span><span class="pun">,</span><span class="pln"> tns</span><span class="pun">[</span><span class="pln">index</span><span class="pun">].</span><span class="pln">children</span><span class="pun">);</span></code></li><li class="L1"><code><span class="pln">    </span><span class="pun">});</span></code></li><li class="L2"><code><span class="pun">};</span></code></li><li class="L3"><code><span class="pln">generateData</span><span class="pun">(</span><span class="pln">z</span><span class="pun">);</span></code></li><li class="L4"><code></code></li><li class="L5"><code><span class="kwd">const</span><span class="pln"> dataList </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[];</span></code></li><li class="L6"><code><span class="kwd">const</span><span class="pln"> generateList </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">data</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L7"><code><span class="pln">    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">let</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> data</span><span class="pun">.</span><span class="pln">length</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L8"><code><span class="pln">        </span><span class="kwd">const</span><span class="pln"> node </span><span class="pun">=</span><span class="pln"> data</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span></code></li><li class="L9"><code><span class="pln">        </span><span class="kwd">const</span><span class="pln"> key </span><span class="pun">=</span><span class="pln"> node</span><span class="pun">.</span><span class="pln">key</span><span class="pun">;</span></code></li><li class="L0"><code><span class="pln">        dataList</span><span class="pun">.</span><span class="pln">push</span><span class="pun">({</span><span class="pln"> key</span><span class="pun">,</span><span class="pln"> title</span><span class="pun">:</span><span class="pln"> key </span><span class="pun">});</span></code></li><li class="L1"><code><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">node</span><span class="pun">.</span><span class="pln">children</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L2"><code><span class="pln">            generateList</span><span class="pun">(</span><span class="pln">node</span><span class="pun">.</span><span class="pln">children</span><span class="pun">,</span><span class="pln"> node</span><span class="pun">.</span><span class="pln">key</span><span class="pun">);</span></code></li><li class="L3"><code><span class="pln">        </span><span class="pun">}</span></code></li><li class="L4"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L5"><code><span class="pun">};</span></code></li><li class="L6"><code><span class="pln">generateList</span><span class="pun">(</span><span class="pln">gData</span><span class="pun">);</span></code></li><li class="L7"><code></code></li><li class="L8"><code><span class="kwd">const</span><span class="pln"> getParentKey </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">key</span><span class="pun">,</span><span class="pln"> tree</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L9"><code><span class="pln">    </span><span class="kwd">let</span><span class="pln"> parentKey</span><span class="pun">;</span></code></li><li class="L0"><code><span class="pln">    </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">let</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> tree</span><span class="pun">.</span><span class="pln">length</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L1"><code><span class="pln">        </span><span class="kwd">const</span><span class="pln"> node </span><span class="pun">=</span><span class="pln"> tree</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span></code></li><li class="L2"><code><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">node</span><span class="pun">.</span><span class="pln">children</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L3"><code><span class="pln">            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">node</span><span class="pun">.</span><span class="pln">children</span><span class="pun">.</span><span class="pln">some</span><span class="pun">(</span><span class="pln">item </span><span class="pun">=&gt;</span><span class="pln"> item</span><span class="pun">.</span><span class="pln">key </span><span class="pun">===</span><span class="pln"> key</span><span class="pun">))</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L4"><code><span class="pln">                parentKey </span><span class="pun">=</span><span class="pln"> node</span><span class="pun">.</span><span class="pln">key</span><span class="pun">;</span></code></li><li class="L5"><code><span class="pln">            </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">getParentKey</span><span class="pun">(</span><span class="pln">key</span><span class="pun">,</span><span class="pln"> node</span><span class="pun">.</span><span class="pln">children</span><span class="pun">))</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L6"><code><span class="pln">                parentKey </span><span class="pun">=</span><span class="pln"> getParentKey</span><span class="pun">(</span><span class="pln">key</span><span class="pun">,</span><span class="pln"> node</span><span class="pun">.</span><span class="pln">children</span><span class="pun">);</span></code></li><li class="L7"><code><span class="pln">            </span><span class="pun">}</span></code></li><li class="L8"><code><span class="pln">        </span><span class="pun">}</span></code></li><li class="L9"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L0"><code><span class="pln">    </span><span class="kwd">return</span><span class="pln"> parentKey</span><span class="pun">;</span></code></li><li class="L1"><code><span class="pun">};</span></code></li><li class="L2"><code></code></li><li class="L3"><code><span class="kwd">class</span><span class="pln"> </span><span class="typ">Detail</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L4"><code><span class="pln">    state </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code><span class="pln">        expandedKeys</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[],</span></code></li><li class="L6"><code><span class="pln">        searchValue</span><span class="pun">:</span><span class="pln"> </span><span class="str">''</span><span class="pun">,</span></code></li><li class="L7"><code><span class="pln">        autoExpandParent</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">,</span></code></li><li class="L8"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L9"><code></code></li><li class="L0"><code><span class="pln">    onExpand </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">expandedKeys</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L1"><code><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">setState</span><span class="pun">({</span></code></li><li class="L2"><code><span class="pln">            expandedKeys</span><span class="pun">,</span></code></li><li class="L3"><code><span class="pln">            autoExpandParent</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">,</span></code></li><li class="L4"><code><span class="pln">        </span><span class="pun">});</span></code></li><li class="L5"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L6"><code></code></li><li class="L7"><code><span class="pln">    onChange </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L8"><code><span class="pln">        </span><span class="kwd">const</span><span class="pln"> value </span><span class="pun">=</span><span class="pln"> e</span><span class="pun">.</span><span class="pln">target</span><span class="pun">.</span><span class="pln">value</span><span class="pun">;</span></code></li><li class="L9"><code><span class="pln">        </span><span class="kwd">const</span><span class="pln"> expandedKeys </span><span class="pun">=</span><span class="pln"> dataList</span><span class="pun">.</span><span class="pln">map</span><span class="pun">((</span><span class="pln">item</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L0"><code><span class="pln">            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">item</span><span class="pun">.</span><span class="pln">title</span><span class="pun">.</span><span class="pln">indexOf</span><span class="pun">(</span><span class="pln">value</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L1"><code><span class="pln">                </span><span class="kwd">return</span><span class="pln"> getParentKey</span><span class="pun">(</span><span class="pln">item</span><span class="pun">.</span><span class="pln">key</span><span class="pun">,</span><span class="pln"> gData</span><span class="pun">);</span></code></li><li class="L2"><code><span class="pln">            </span><span class="pun">}</span></code></li><li class="L3"><code><span class="pln">            </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span></code></li><li class="L4"><code><span class="pln">        </span><span class="pun">}).</span><span class="pln">filter</span><span class="pun">((</span><span class="pln">item</span><span class="pun">,</span><span class="pln"> i</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">self</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> item </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="kwd">self</span><span class="pun">.</span><span class="pln">indexOf</span><span class="pun">(</span><span class="pln">item</span><span class="pun">)</span><span class="pln"> </span><span class="pun">===</span><span class="pln"> i</span><span class="pun">);</span></code></li><li class="L5"><code><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">setState</span><span class="pun">({</span></code></li><li class="L6"><code><span class="pln">            expandedKeys</span><span class="pun">,</span></code></li><li class="L7"><code><span class="pln">            searchValue</span><span class="pun">:</span><span class="pln"> value</span><span class="pun">,</span></code></li><li class="L8"><code><span class="pln">            autoExpandParent</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">,</span></code></li><li class="L9"><code><span class="pln">        </span><span class="pun">});</span></code></li><li class="L0"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L1"><code></code></li><li class="L2"><code><span class="pln">    render</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L3"><code><span class="pln">        </span><span class="kwd">const</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> searchValue</span><span class="pun">,</span><span class="pln"> expandedKeys</span><span class="pun">,</span><span class="pln"> autoExpandParent </span><span class="pun">}</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">;</span></code></li><li class="L4"><code><span class="pln">        </span><span class="kwd">const</span><span class="pln"> loop </span><span class="pun">=</span><span class="pln"> data </span><span class="pun">=&gt;</span><span class="pln"> data</span><span class="pun">.</span><span class="pln">map</span><span class="pun">((</span><span class="pln">item</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code><span class="pln">            </span><span class="kwd">const</span><span class="pln"> index </span><span class="pun">=</span><span class="pln"> item</span><span class="pun">.</span><span class="pln">title</span><span class="pun">.</span><span class="pln">indexOf</span><span class="pun">(</span><span class="pln">searchValue</span><span class="pun">);</span></code></li><li class="L6"><code><span class="pln">            </span><span class="kwd">const</span><span class="pln"> beforeStr </span><span class="pun">=</span><span class="pln"> item</span><span class="pun">.</span><span class="pln">title</span><span class="pun">.</span><span class="pln">substr</span><span class="pun">(</span><span class="lit">0</span><span class="pun">,</span><span class="pln"> index</span><span class="pun">);</span></code></li><li class="L7"><code><span class="pln">            </span><span class="kwd">const</span><span class="pln"> afterStr </span><span class="pun">=</span><span class="pln"> item</span><span class="pun">.</span><span class="pln">title</span><span class="pun">.</span><span class="pln">substr</span><span class="pun">(</span><span class="pln">index </span><span class="pun">+</span><span class="pln"> searchValue</span><span class="pun">.</span><span class="pln">length</span><span class="pun">);</span></code></li><li class="L8"><code><span class="pln">            </span><span class="kwd">const</span><span class="pln"> title </span><span class="pun">=</span><span class="pln"> index </span><span class="pun">&gt;</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pln"> </span><span class="pun">?</span><span class="pln"> </span><span class="pun">(</span></code></li><li class="L9"><code><span class="pln">                </span><span class="str">&lt;span&gt;</span></code></li><li class="L0"><code><span class="pln">                    </span><span class="pun">{</span><span class="pln">beforeStr</span><span class="pun">}</span></code></li><li class="L1"><code><span class="pln">                    </span><span class="pun">&lt;</span><span class="pln">span style</span><span class="pun">={{</span><span class="pln"> color</span><span class="pun">:</span><span class="pln"> </span><span class="str">'#f50'</span><span class="pln"> </span><span class="pun">}}&gt;{</span><span class="pln">searchValue</span><span class="pun">}&lt;/</span><span class="pln">span</span><span class="pun">&gt;</span></code></li><li class="L2"><code><span class="pln">                    </span><span class="pun">{</span><span class="pln">afterStr</span><span class="pun">}</span></code></li><li class="L3"><code><span class="pln">                </span><span class="pun">&lt;/</span><span class="pln">span</span><span class="pun">&gt;</span></code></li><li class="L4"><code><span class="pln">            </span><span class="pun">)</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">&lt;span&gt;</span><span class="pun">{</span><span class="pln">item</span><span class="pun">.</span><span class="pln">title</span><span class="pun">}&lt;/</span><span class="pln">span</span><span class="pun">&gt;;</span></code></li><li class="L5"><code><span class="pln">            </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">item</span><span class="pun">.</span><span class="pln">children</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L6"><code><span class="pln">                </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">(</span></code></li><li class="L7"><code><span class="pln">                    </span><span class="pun">&lt;</span><span class="typ">TreeNode</span><span class="pln"> key</span><span class="pun">={</span><span class="pln">item</span><span class="pun">.</span><span class="pln">key</span><span class="pun">}</span><span class="pln"> title</span><span class="pun">={</span><span class="pln">title</span><span class="pun">}&gt;</span></code></li><li class="L8"><code><span class="pln">                        </span><span class="pun">{</span><span class="pln">loop</span><span class="pun">(</span><span class="pln">item</span><span class="pun">.</span><span class="pln">children</span><span class="pun">)}</span></code></li><li class="L9"><code><span class="pln">                    </span><span class="pun">&lt;/</span><span class="typ">TreeNode</span><span class="pun">&gt;</span></code></li><li class="L0"><code><span class="pln">                </span><span class="pun">);</span></code></li><li class="L1"><code><span class="pln">            </span><span class="pun">}</span></code></li><li class="L2"><code><span class="pln">            </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">&lt;</span><span class="typ">TreeNode</span><span class="pln"> key</span><span class="pun">={</span><span class="pln">item</span><span class="pun">.</span><span class="pln">key</span><span class="pun">}</span><span class="pln"> title</span><span class="pun">={</span><span class="pln">title</span><span class="pun">}</span><span class="pln"> </span><span class="pun">/&gt;;</span></code></li><li class="L3"><code><span class="pln">        </span><span class="pun">});</span></code></li><li class="L4"><code><span class="pln">        </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">(</span></code></li><li class="L5"><code><span class="pln">            </span><span class="str">&lt;div&gt;</span></code></li><li class="L6"><code><span class="pln">                </span><span class="pun">&lt;</span><span class="typ">Search</span><span class="pln"> style</span><span class="pun">={{</span><span class="pln"> marginBottom</span><span class="pun">:</span><span class="pln"> </span><span class="lit">8</span><span class="pln"> </span><span class="pun">}}</span><span class="pln"> placeholder</span><span class="pun">=</span><span class="str">"Search"</span><span class="pln"> onChange</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">onChange</span><span class="pun">}</span><span class="pln"> </span><span class="pun">/&gt;</span></code></li><li class="L7"><code><span class="pln">                </span><span class="pun">&lt;</span><span class="typ">Tree</span></code></li><li class="L8"><code><span class="pln">                    onExpand</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">onExpand</span><span class="pun">}</span></code></li><li class="L9"><code><span class="pln">                    expandedKeys</span><span class="pun">={</span><span class="pln">expandedKeys</span><span class="pun">}</span></code></li><li class="L0"><code><span class="pln">                    autoExpandParent</span><span class="pun">={</span><span class="pln">autoExpandParent</span><span class="pun">}</span></code></li><li class="L1"><code><span class="pln">                </span><span class="pun">&gt;</span></code></li><li class="L2"><code><span class="pln">                    </span><span class="pun">{</span><span class="pln">loop</span><span class="pun">(</span><span class="pln">gData</span><span class="pun">)}</span></code></li><li class="L3"><code><span class="pln">                </span><span class="pun">&lt;/</span><span class="typ">Tree</span><span class="pun">&gt;</span></code></li><li class="L4"><code><span class="pln">            </span><span class="pun">&lt;/</span><span class="pln">div</span><span class="pun">&gt;</span></code></li><li class="L5"><code><span class="pln">        </span><span class="pun">);</span></code></li><li class="L6"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L7"><code><span class="pun">}</span></code></li><li class="L8"><code></code></li><li class="L9"><code><span class="kwd">export</span><span class="pln"> </span><span class="kwd">default</span><span class="pln"> </span><span class="typ">Detail</span><span class="pun">;</span></code></li></ol></pre>`;
export default{
    code,
}