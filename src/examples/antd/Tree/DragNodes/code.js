const code=`<pre class="prettyprint linenums prettyprinted" data-anchor-id="ylef" style=""><ol class="linenums"><li class="L0"><code><span class="kwd">import</span><span class="pln"> </span><span class="typ">React</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'react'</span><span class="pun">;</span></code></li><li class="L1"><code><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="typ">Tree</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'quant-ui'</span><span class="pun">;</span></code></li><li class="L2"><code></code></li><li class="L3"><code><span class="kwd">const</span><span class="pln"> </span><span class="typ">TreeNode</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Tree</span><span class="pun">.</span><span class="typ">TreeNode</span><span class="pun">;</span></code></li><li class="L4"><code></code></li><li class="L5"><code><span class="kwd">const</span><span class="pln"> x </span><span class="pun">=</span><span class="pln"> </span><span class="lit">3</span><span class="pun">;</span></code></li><li class="L6"><code><span class="kwd">const</span><span class="pln"> y </span><span class="pun">=</span><span class="pln"> </span><span class="lit">2</span><span class="pun">;</span></code></li><li class="L7"><code><span class="kwd">const</span><span class="pln"> z </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span></code></li><li class="L8"><code><span class="kwd">const</span><span class="pln"> gData </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[];</span></code></li><li class="L9"><code></code></li><li class="L0"><code><span class="kwd">const</span><span class="pln"> generateData </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">_level</span><span class="pun">,</span><span class="pln"> _preKey</span><span class="pun">,</span><span class="pln"> _tns</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L1"><code><span class="pln">  </span><span class="kwd">const</span><span class="pln"> preKey </span><span class="pun">=</span><span class="pln"> _preKey </span><span class="pun">||</span><span class="pln"> </span><span class="str">'0'</span><span class="pun">;</span></code></li><li class="L2"><code><span class="pln">  </span><span class="kwd">const</span><span class="pln"> tns </span><span class="pun">=</span><span class="pln"> _tns </span><span class="pun">||</span><span class="pln"> gData</span><span class="pun">;</span></code></li><li class="L3"><code></code></li><li class="L4"><code><span class="pln">  </span><span class="kwd">const</span><span class="pln"> children </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[];</span></code></li><li class="L5"><code><span class="pln">  </span><span class="kwd">for</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">let</span><span class="pln"> i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"> i </span><span class="pun">&lt;</span><span class="pln"> x</span><span class="pun">;</span><span class="pln"> i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L6"><code><span class="pln">    </span><span class="kwd">const</span><span class="pln"> key </span><span class="pun">=</span><span class="pln"> </span><span class="str">\`$\{preKey}-$\{i}\`</span><span class="pun">;</span></code></li><li class="L7"><code><span class="pln">    tns</span><span class="pun">.</span><span class="pln">push</span><span class="pun">({</span><span class="pln"> title</span><span class="pun">:</span><span class="pln"> key</span><span class="pun">,</span><span class="pln"> key </span><span class="pun">});</span></code></li><li class="L8"><code><span class="pln">    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">i </span><span class="pun">&lt;</span><span class="pln"> y</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L9"><code><span class="pln">      children</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="pln">key</span><span class="pun">);</span></code></li><li class="L0"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L1"><code><span class="pln">  </span><span class="pun">}</span></code></li><li class="L2"><code><span class="pln">  </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">_level </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L3"><code><span class="pln">    </span><span class="kwd">return</span><span class="pln"> tns</span><span class="pun">;</span></code></li><li class="L4"><code><span class="pln">  </span><span class="pun">}</span></code></li><li class="L5"><code><span class="pln">  </span><span class="kwd">const</span><span class="pln"> level </span><span class="pun">=</span><span class="pln"> _level </span><span class="pun">-</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span></code></li><li class="L6"><code><span class="pln">  children</span><span class="pun">.</span><span class="pln">forEach</span><span class="pun">((</span><span class="pln">key</span><span class="pun">,</span><span class="pln"> index</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L7"><code><span class="pln">    tns</span><span class="pun">[</span><span class="pln">index</span><span class="pun">].</span><span class="pln">children </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[];</span></code></li><li class="L8"><code><span class="pln">    </span><span class="kwd">return</span><span class="pln"> generateData</span><span class="pun">(</span><span class="pln">level</span><span class="pun">,</span><span class="pln"> key</span><span class="pun">,</span><span class="pln"> tns</span><span class="pun">[</span><span class="pln">index</span><span class="pun">].</span><span class="pln">children</span><span class="pun">);</span></code></li><li class="L9"><code><span class="pln">  </span><span class="pun">});</span></code></li><li class="L0"><code><span class="pun">};</span></code></li><li class="L1"><code><span class="pln">generateData</span><span class="pun">(</span><span class="pln">z</span><span class="pun">);</span></code></li><li class="L2"><code></code></li><li class="L3"><code><span class="kwd">class</span><span class="pln"> </span><span class="typ">Detail</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">React</span><span class="pun">.</span><span class="typ">Component</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L4"><code><span class="pln">  state </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code><span class="pln">    gData</span><span class="pun">,</span></code></li><li class="L6"><code><span class="pln">    expandedKeys</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="str">'0-0'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'0-0-0'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'0-0-0-0'</span><span class="pun">],</span></code></li><li class="L7"><code><span class="pln">  </span><span class="pun">}</span></code></li><li class="L8"><code></code></li><li class="L9"><code><span class="pln">  onDragEnter </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">info</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L0"><code><span class="pln">    console</span><span class="pun">.</span><span class="pln">log</span><span class="pun">(</span><span class="pln">info</span><span class="pun">);</span></code></li><li class="L1"><code></code></li><li class="L2"><code><span class="pln">  </span><span class="pun">}</span></code></li><li class="L3"><code></code></li><li class="L4"><code><span class="pln">  onDrop </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">info</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code><span class="pln">    console</span><span class="pun">.</span><span class="pln">log</span><span class="pun">(</span><span class="pln">info</span><span class="pun">);</span></code></li><li class="L6"><code><span class="pln">    </span><span class="kwd">const</span><span class="pln"> dropKey </span><span class="pun">=</span><span class="pln"> info</span><span class="pun">.</span><span class="pln">node</span><span class="pun">.</span><span class="pln">props</span><span class="pun">.</span><span class="pln">eventKey</span><span class="pun">;</span></code></li><li class="L7"><code><span class="pln">    </span><span class="kwd">const</span><span class="pln"> dragKey </span><span class="pun">=</span><span class="pln"> info</span><span class="pun">.</span><span class="pln">dragNode</span><span class="pun">.</span><span class="pln">props</span><span class="pun">.</span><span class="pln">eventKey</span><span class="pun">;</span></code></li><li class="L8"><code><span class="pln">    </span><span class="kwd">const</span><span class="pln"> dropPos </span><span class="pun">=</span><span class="pln"> info</span><span class="pun">.</span><span class="pln">node</span><span class="pun">.</span><span class="pln">props</span><span class="pun">.</span><span class="pln">pos</span><span class="pun">.</span><span class="pln">split</span><span class="pun">(</span><span class="str">'-'</span><span class="pun">);</span></code></li><li class="L9"><code><span class="pln">    </span><span class="kwd">const</span><span class="pln"> dropPosition </span><span class="pun">=</span><span class="pln"> info</span><span class="pun">.</span><span class="pln">dropPosition </span><span class="pun">-</span><span class="pln"> </span><span class="typ">Number</span><span class="pun">(</span><span class="pln">dropPos</span><span class="pun">[</span><span class="pln">dropPos</span><span class="pun">.</span><span class="pln">length </span><span class="pun">-</span><span class="pln"> </span><span class="lit">1</span><span class="pun">]);</span></code></li><li class="L0"><code></code></li><li class="L1"><code><span class="pln">    </span><span class="kwd">const</span><span class="pln"> loop </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">data</span><span class="pun">,</span><span class="pln"> key</span><span class="pun">,</span><span class="pln"> callback</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L2"><code><span class="pln">      data</span><span class="pun">.</span><span class="pln">forEach</span><span class="pun">((</span><span class="pln">item</span><span class="pun">,</span><span class="pln"> index</span><span class="pun">,</span><span class="pln"> arr</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L3"><code><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">item</span><span class="pun">.</span><span class="pln">key </span><span class="pun">===</span><span class="pln"> key</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L4"><code><span class="pln">          </span><span class="kwd">return</span><span class="pln"> callback</span><span class="pun">(</span><span class="pln">item</span><span class="pun">,</span><span class="pln"> index</span><span class="pun">,</span><span class="pln"> arr</span><span class="pun">);</span></code></li><li class="L5"><code><span class="pln">        </span><span class="pun">}</span></code></li><li class="L6"><code><span class="pln">        </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">item</span><span class="pun">.</span><span class="pln">children</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L7"><code><span class="pln">          </span><span class="kwd">return</span><span class="pln"> loop</span><span class="pun">(</span><span class="pln">item</span><span class="pun">.</span><span class="pln">children</span><span class="pun">,</span><span class="pln"> key</span><span class="pun">,</span><span class="pln"> callback</span><span class="pun">);</span></code></li><li class="L8"><code><span class="pln">        </span><span class="pun">}</span></code></li><li class="L9"><code><span class="pln">      </span><span class="pun">});</span></code></li><li class="L0"><code><span class="pln">    </span><span class="pun">};</span></code></li><li class="L1"><code><span class="pln">    </span><span class="kwd">const</span><span class="pln"> data </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[...</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">gData</span><span class="pun">];</span></code></li><li class="L2"><code><span class="pln">    </span><span class="kwd">let</span><span class="pln"> dragObj</span><span class="pun">;</span></code></li><li class="L3"><code><span class="pln">    loop</span><span class="pun">(</span><span class="pln">data</span><span class="pun">,</span><span class="pln"> dragKey</span><span class="pun">,</span><span class="pln"> </span><span class="pun">(</span><span class="pln">item</span><span class="pun">,</span><span class="pln"> index</span><span class="pun">,</span><span class="pln"> arr</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L4"><code><span class="pln">      arr</span><span class="pun">.</span><span class="pln">splice</span><span class="pun">(</span><span class="pln">index</span><span class="pun">,</span><span class="pln"> </span><span class="lit">1</span><span class="pun">);</span></code></li><li class="L5"><code><span class="pln">      dragObj </span><span class="pun">=</span><span class="pln"> item</span><span class="pun">;</span></code></li><li class="L6"><code><span class="pln">    </span><span class="pun">});</span></code></li><li class="L7"><code><span class="pln">    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">info</span><span class="pun">.</span><span class="pln">dropToGap</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L8"><code><span class="pln">      </span><span class="kwd">let</span><span class="pln"> ar</span><span class="pun">;</span></code></li><li class="L9"><code><span class="pln">      </span><span class="kwd">let</span><span class="pln"> i</span><span class="pun">;</span></code></li><li class="L0"><code><span class="pln">      loop</span><span class="pun">(</span><span class="pln">data</span><span class="pun">,</span><span class="pln"> dropKey</span><span class="pun">,</span><span class="pln"> </span><span class="pun">(</span><span class="pln">item</span><span class="pun">,</span><span class="pln"> index</span><span class="pun">,</span><span class="pln"> arr</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L1"><code><span class="pln">        ar </span><span class="pun">=</span><span class="pln"> arr</span><span class="pun">;</span></code></li><li class="L2"><code><span class="pln">        i </span><span class="pun">=</span><span class="pln"> index</span><span class="pun">;</span></code></li><li class="L3"><code><span class="pln">      </span><span class="pun">});</span></code></li><li class="L4"><code><span class="pln">      </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">dropPosition </span><span class="pun">===</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code><span class="pln">        ar</span><span class="pun">.</span><span class="pln">splice</span><span class="pun">(</span><span class="pln">i</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> dragObj</span><span class="pun">);</span></code></li><li class="L6"><code><span class="pln">      </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L7"><code><span class="pln">        ar</span><span class="pun">.</span><span class="pln">splice</span><span class="pun">(</span><span class="pln">i </span><span class="pun">+</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> dragObj</span><span class="pun">);</span></code></li><li class="L8"><code><span class="pln">      </span><span class="pun">}</span></code></li><li class="L9"><code><span class="pln">    </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L0"><code><span class="pln">      loop</span><span class="pun">(</span><span class="pln">data</span><span class="pun">,</span><span class="pln"> dropKey</span><span class="pun">,</span><span class="pln"> </span><span class="pun">(</span><span class="pln">item</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L1"><code><span class="pln">        item</span><span class="pun">.</span><span class="pln">children </span><span class="pun">=</span><span class="pln"> item</span><span class="pun">.</span><span class="pln">children </span><span class="pun">||</span><span class="pln"> </span><span class="pun">[];</span></code></li><li class="L2"><code></code></li><li class="L3"><code><span class="pln">        item</span><span class="pun">.</span><span class="pln">children</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="pln">dragObj</span><span class="pun">);</span></code></li><li class="L4"><code><span class="pln">      </span><span class="pun">});</span></code></li><li class="L5"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L6"><code><span class="pln">    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">setState</span><span class="pun">({</span></code></li><li class="L7"><code><span class="pln">      gData</span><span class="pun">:</span><span class="pln"> data</span><span class="pun">,</span></code></li><li class="L8"><code><span class="pln">    </span><span class="pun">});</span></code></li><li class="L9"><code><span class="pln">  </span><span class="pun">}</span></code></li><li class="L0"><code></code></li><li class="L1"><code><span class="pln">  render</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L2"><code><span class="pln">    </span><span class="kwd">const</span><span class="pln"> loop </span><span class="pun">=</span><span class="pln"> data </span><span class="pun">=&gt;</span><span class="pln"> data</span><span class="pun">.</span><span class="pln">map</span><span class="pun">((</span><span class="pln">item</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L3"><code><span class="pln">      </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">item</span><span class="pun">.</span><span class="pln">children </span><span class="pun">&amp;&amp;</span><span class="pln"> item</span><span class="pun">.</span><span class="pln">children</span><span class="pun">.</span><span class="pln">length</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L4"><code><span class="pln">        </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">&lt;</span><span class="typ">TreeNode</span><span class="pln"> key</span><span class="pun">={</span><span class="pln">item</span><span class="pun">.</span><span class="pln">key</span><span class="pun">}</span><span class="pln"> title</span><span class="pun">={</span><span class="pln">item</span><span class="pun">.</span><span class="pln">title</span><span class="pun">}&gt;{</span><span class="pln">loop</span><span class="pun">(</span><span class="pln">item</span><span class="pun">.</span><span class="pln">children</span><span class="pun">)}&lt;/</span><span class="typ">TreeNode</span><span class="pun">&gt;;</span></code></li><li class="L5"><code><span class="pln">      </span><span class="pun">}</span></code></li><li class="L6"><code><span class="pln">      </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">&lt;</span><span class="typ">TreeNode</span><span class="pln"> key</span><span class="pun">={</span><span class="pln">item</span><span class="pun">.</span><span class="pln">key</span><span class="pun">}</span><span class="pln"> title</span><span class="pun">={</span><span class="pln">item</span><span class="pun">.</span><span class="pln">title</span><span class="pun">}</span><span class="pln"> </span><span class="pun">/&gt;;</span></code></li><li class="L7"><code><span class="pln">    </span><span class="pun">});</span></code></li><li class="L8"><code><span class="pln">    </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">(</span></code></li><li class="L9"><code><span class="pln">      </span><span class="pun">&lt;</span><span class="typ">Tree</span></code></li><li class="L0"><code><span class="pln">        className</span><span class="pun">=</span><span class="str">"draggable-tree"</span></code></li><li class="L1"><code><span class="pln">        defaultExpandedKeys</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">expandedKeys</span><span class="pun">}</span></code></li><li class="L2"><code><span class="pln">        draggable</span></code></li><li class="L3"><code><span class="pln">        onDragEnter</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">onDragEnter</span><span class="pun">}</span></code></li><li class="L4"><code><span class="pln">        onDrop</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">onDrop</span><span class="pun">}</span></code></li><li class="L5"><code><span class="pln">      </span><span class="pun">&gt;</span></code></li><li class="L6"><code><span class="pln">        </span><span class="pun">{</span><span class="pln">loop</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">.</span><span class="pln">gData</span><span class="pun">)}</span></code></li><li class="L7"><code><span class="pln">      </span><span class="pun">&lt;/</span><span class="typ">Tree</span><span class="pun">&gt;</span></code></li><li class="L8"><code><span class="pln">    </span><span class="pun">);</span></code></li><li class="L9"><code><span class="pln">  </span><span class="pun">}</span></code></li><li class="L0"><code><span class="pun">}</span></code></li><li class="L1"><code></code></li><li class="L2"><code><span class="kwd">export</span><span class="pln"> </span><span class="kwd">default</span><span class="pln"> </span><span class="typ">Detail</span><span class="pun">;</span></code></li></ol></pre>`;
export default{
    code,
}