const code = `
<pre class="prettyprint linenums prettyprinted" data-anchor-id="mkar"><ol class="linenums"><li class="L0"><code><span class="kwd">import</span><span class="pln"> </span><span class="typ">React</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'react'</span><span class="pun">;</span></code></li><li class="L1"><code><span class="kwd">import</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="typ">Editor</span><span class="pln"> </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">from</span><span class="pln"> </span><span class="str">'quant-ui'</span><span class="pun">;</span></code></li><li class="L2"><code><span class="kwd">const</span><span class="pln"> draftToHtml </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Editor</span><span class="pun">.</span><span class="pln">draftToHtml</span><span class="pun">;</span></code></li><li class="L3"><code></code></li><li class="L4"><code></code></li><li class="L5"><code><span class="kwd">class</span><span class="pln"> </span><span class="typ">Detail</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Component</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L6"><code><span class="pln">    state </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L7"><code><span class="pln">        editorState</span><span class="pun">:</span><span class="pln"> </span><span class="str">''</span><span class="pun">,</span></code></li><li class="L8"><code><span class="pln">    </span><span class="pun">};</span></code></li><li class="L9"><code><span class="pln">    onEditorStateChange </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">editorState</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;{</span></code></li><li class="L0"><code><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">setState</span><span class="pun">({</span></code></li><li class="L1"><code><span class="pln">            editorState</span><span class="pun">,</span></code></li><li class="L2"><code><span class="pln">        </span><span class="pun">});</span></code></li><li class="L3"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L4"><code><span class="pln">    onEditorChange </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="pln">editorContent</span><span class="pun">)</span><span class="pln"> </span><span class="pun">=&gt;{</span></code></li><li class="L5"><code><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">setState</span><span class="pun">({</span></code></li><li class="L6"><code><span class="pln">            editorContent</span><span class="pun">,</span></code></li><li class="L7"><code><span class="pln">        </span><span class="pun">});</span></code></li><li class="L8"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L9"><code><span class="pln">    render</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L0"><code><span class="pln">        </span><span class="kwd">const</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> editorContent</span><span class="pun">,</span><span class="pln"> editorState </span><span class="pun">}</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">state</span><span class="pun">;</span></code></li><li class="L1"><code><span class="pln">        </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">(</span></code></li><li class="L2"><code><span class="pln">            </span><span class="pun">&lt;</span><span class="pln">div </span><span class="pun">&gt;</span></code></li><li class="L3"><code><span class="pln">                </span><span class="pun">&lt;</span><span class="typ">Editor</span><span class="pln"> </span></code></li><li class="L4"><code><span class="pln">                    wrapperClassName</span><span class="pun">=</span><span class="str">"home-wrapper"</span><span class="pln"> </span><span class="com">//应用于编辑器和工具栏的类</span></code></li><li class="L5"><code><span class="pln">                    editorClassName</span><span class="pun">=</span><span class="str">"home-editor"</span><span class="pln">  </span><span class="com">//在编辑器周围应用的类</span></code></li><li class="L6"><code><span class="pln">                    toolbarClassName</span><span class="pun">=</span><span class="str">"home-toolbar"</span><span class="pln"> </span><span class="com">//应用于工具栏周围的类</span></code></li><li class="L7"><code><span class="pln">                    toolbar</span><span class="pun">={{</span></code></li><li class="L8"><code><span class="pln">                        </span><span class="kwd">inline</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> inDropdown</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"> </span><span class="pun">},</span></code></li><li class="L9"><code><span class="pln">                        list</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> inDropdown</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"> </span><span class="pun">},</span></code></li><li class="L0"><code><span class="pln">                        textAlign</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> inDropdown</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"> </span><span class="pun">},</span></code></li><li class="L1"><code><span class="pln">                        link</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> inDropdown</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"> </span><span class="pun">},</span></code></li><li class="L2"><code><span class="pln">                        history</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> inDropdown</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">true</span><span class="pln"> </span><span class="pun">},</span></code></li><li class="L3"><code><span class="pln">                      </span><span class="pun">}}</span><span class="pln">            </span><span class="com">//自定义预先构建的工具栏选项。</span></code></li><li class="L4"><code><span class="pln">                    onEditorStateChange</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">onEditorStateChange</span><span class="pun">}</span><span class="pln">  </span><span class="com">//每次编辑器状态发生变化时调用函数，传递的函数参数是EditorState类型的  对象</span></code></li><li class="L5"><code><span class="pln">                    onContentStateChange</span><span class="pun">={</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">onEditorChange</span><span class="pun">}</span><span class="pln">  </span><span class="com">//每次编辑器状态发生变化时调用函数，传递的函数参数是RawDraftContentState类型的  对象</span></code></li><li class="L6"><code><span class="pln">                </span><span class="pun">/&gt;</span></code></li><li class="L7"><code><span class="pln">                </span><span class="pun">&lt;</span><span class="pln">br</span><span class="pun">/&gt;&lt;</span><span class="pln">br</span><span class="pun">/&gt;</span></code></li><li class="L8"><code><span class="pln">                </span><span class="str">&lt;h2&gt;</span><span class="pun">同步转换</span><span class="pln">HTML</span><span class="pun">&lt;/</span><span class="pln">h2</span><span class="pun">&gt;</span></code></li><li class="L9"><code><span class="pln">                </span><span class="str">&lt;pre&gt;</span><span class="pun">{</span><span class="pln">draftToHtml</span><span class="pun">(</span><span class="pln">editorContent</span><span class="pun">)}&lt;/</span><span class="pln">pre</span><span class="pun">&gt;</span></code></li><li class="L0"><code><span class="pln">            </span><span class="pun">&lt;/</span><span class="pln">div</span><span class="pun">&gt;</span></code></li><li class="L1"><code><span class="pln">        </span><span class="pun">);</span></code></li><li class="L2"><code><span class="pln">    </span><span class="pun">}</span></code></li><li class="L3"><code><span class="pun">}</span></code></li><li class="L4"><code><span class="kwd">export</span><span class="pln"> </span><span class="kwd">default</span><span class="pln"> </span><span class="typ">Detail</span><span class="pun">;</span></code></li></ol></pre>`;

export default {
	code,
}